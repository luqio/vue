/*
    IE 10 and above, fallback included.
    IE 10+ picks on the \9 hack so effect will be inconsistent accross IE and webkit
    if you want absolute consistent display across all supporting browsers overwrite the \9 hack with -ms-high-contrast yourself.
*/
@mixin effect__hvr--bg-swipe-right($hoverBgColor, $hoverTextColor) {
    transition: all 1s;
    &:before {
        content: "";
        position: absolute;
        z-index: -1;
        top: 0;
        left: 0;
        //right: 100%;
        right: 0;
        right: 100%\9;
        bottom: 0;
        background: $hoverBgColor;
        transition: all 1s;
        transform: scaleX(0);
        transform-origin: 0 50%;
    }

    &:hover {
        transform: translateZ(0);
        color: $hoverTextColor;
        &:before {
            //right: 0;
            right: 0\9;
            transform: scaleX(1);
        }
    }
}

/* IE9 and above, no fallback*/
@mixin  effect__hvr--enlarge($scale) {
    transition: transform 1s;
    z-index: 10;
    &:hover{
        transform: scale($scale);
    }
}

/*
    only supports IE10 and above due to the2D transform
    forces the parent to have no border;
*/
@mixin effect__hvr--bdr-swipe-right($regularBorderColor, $hoverBorderColor, $hoverBorderWidth, $borderRadius) {
    transform: translateZ(0);
    overflow: visible;
    border-width: 0;
    &:before {
        content: '';
        display: none\9;
        position: absolute;
        z-index: -1;
        opacity: 1;
        border-radius: $borderRadius;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: solid $hoverBorderWidth $regularBorderColor;
        background: transparent;
        transition: left 1s, border-left-color 0s 1s;
    }

    &:after {
        content: '';
        display: none\9;
        position: absolute;
        opacity: 0;
        z-index: -2;
        border-radius: $borderRadius;
        border-width: $hoverBorderWidth;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: solid $hoverBorderWidth $hoverBorderColor;
        background: transparent;
        transition: opacity 0s 1s;
    }

    &:hover{
        &:before {
            left: 100%;
            right: 0%;
            opacity: 0;
            border-left-color: transparent;
            transition: left 1s, right 0s 1s, opacity 0s .9s;
        }
        &:after {
            opacity: 1;
            transition: opacity 0s 0s;
        }
    }
}

//you need to include the following hack for IE 10-11 to display the above effect correctly*/
//$media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
//     .your-element-class {
//         border-width: 0;
//            &:before {
//                 display: block;
//            }
//
//            &:after {
//                display: block;
//            }
//        }
// }

@mixin effect__hvr--drop-shadow($shadowOpacity) {
    transition: box-shadow .5s;
    box-shadow: 0px 0px 0px 0px rgba(0,0,0,$shadowOpacity);
    &:hover{
        box-shadow: 0px 0px 5px 0px rgba(0,0,0,$shadowOpacity);
    }
}

@mixin effect__hvr--border-bottom--grow($lineColor, $borderWidth) {
    *border-bottom: solid $borderWidth transparent;
    &:after {
        display: block;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        height: $borderWidth;
        transform: scaleY(0);
       /* visibility: ~"hidden\0/";*/
        *visibility: hidden;
        transform-origin: 100% 100%;
        content: '';
        background: $lineColor;
        transition: all .5s;
    }

    &:hover,
    &:active {
        *border-bottom: solid $borderWidth $lineColor;
        &:after {
            transform: scaleY(1);
            /*visibility: ~"visible\0/";*/
            *visibility: visible;
        }
    }
}

@mixin effect__hvr--border-bottom--swipe-right($lineColor, $borderWidth) {
    *border-bottom: solid $borderWidth transparent;
    &:after {
        display: block;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        height: $borderWidth;
        transform: scaleX(0);
        transform-origin: 0 100%;
        content: '';
       /* visibility: ~"hidden\0/";*/
        *visibility: hidden;
        background: $lineColor;
        transition: all .5s;
    }

    &:hover,
    &:active {
        *border-bottom: solid $borderWidth $lineColor;
        &:after {
            transform: scaleY(1);
            /*visibility: ~"visible\0/";*/
            *visibility: visible;
        }
    }
}

@mixin effect__tab--border-bottom--swipe($lineColor, $borderWidth) {
    *border-bottom: solid $borderWidth transparent;
    &:after {
        display: block;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        height: $borderWidth;
        transform: scaleX(0);
        transform-origin: 50% 100% 0;
        content: '';
        /*visibility: ~"hidden\0/";*/
        *visibility: hidden;
        background: $lineColor;
        transition: all .5s;
    }

    &.current {
        *border-bottom: solid $borderWidth $lineColor;
        &:after {
            transform: scaleY(1);
            /*visibility: ~"visible\0/";*/
            *visibility: visible;
        }
    }
}

@mixin effect__pop--fade-in-out {
    &.qwindow{
        opacity: 0;
        transform: scale(1);
        transition: opacity .5s ease-in-out;
    }

    &.qwindow_mask {
        opacity: 0;
        transform: scale(1);
        transition: opacity .5s ease-in-out;
    }

    &.show {
        &.qwindow{
            opacity: 1;
            transform: scale(1);
            transition: opacity .5s ease-in-out;
        }
        &.qwindow_mask {
            opacity: 0.5;
            transform: scale(1);
            transition: opacity .5s ease-in-out;
        }
    }
}

@mixin effect__pop--zoom-in-out {
    &.qwindow{
        transform: scale(0);
        opacity: 1;
        transition: transform .5s ease-in-out;
    }

    //correction for qwindow mask scale, can be used with other popups
    &.qwindow_mask {
        transform: scale(1);
        transition: transform .5s ease-in-out;
    }

    &.show {
        &.qwindow{
            transform: scale(1);
            opacity: 1;
            transition: transform .5s ease-in-out;
        }
        &.qwindow_mask {
            opacity: 0.5;
            transform: scale(1);
            transition: transform .5s ease-in-out;
        }
    }
}

.effect__pop--fade-zoom-in-out {
    @include effect__pop--fade-in-out;
    @include effect__pop--zoom-in-out;
    &.qwindow_mask {
        transition: opacity .5s ease-in-out;
    }
    &.qwindow{
        transition: transform .5s ease-in, opacity .5s ease-in-out;
    }
    &.show{
        &.qwindow_mask {
            transition: opacity .5s ease-in-out;
        }
        &.qwindow{
            transition: transform .5s ease-in, opacity .5s ease-in-out;
        }
    }
}

//used as default effect for qwindow
.effect__pop--fade-zoom-in-out--complex {
    &.qwindow{
        opacity: 0;
        visibility: visible;
        transform: scale(0);
        transition: transform .2s 0s cubic-bezier(.24,.01,.82,1), opacity .2s 0s ease-in-out, visibility .4s;
    }
    &.qwindow_mask {
        visibility: visible;
        transform: scale(1);
        opacity: 0;
        transition: opacity .2s .2s linear;
    }

    &.show {
        &.qwindow{
            transform: scale(1);
            opacity: 1;
            visibility: visible;
            transition: transform .2s .04s cubic-bezier(.5,.01,.88,1), opacity .2s .04s ease-in-out, visibility .24s;
        }
        &.qwindow_mask {
            opacity: 0.5;
            transition: opacity .12s 0s linear;
        }
    }
}

@mixin effect__list--expand-collapse--v($maxHeight) {
    max-height: 0;
    overflow: hidden;
    transition: max-height .5s cubic-bezier(.5,0,.5,0);
    &.expanded {
        max-height: $maxHeight;
        transition: max-height .5s cubic-bezier(0,.5,0,.5);
    }
}

@mixin effect__list--expand-collapse--v--scale($maxHeight) {
    max-height: 0;
    transform: scaleY(0);
    transform-origin: 0 0;
    overflow: hidden;
    transition: transform .5s cubic-bezier(.5,0,.5,0), max-height .5s cubic-bezier(.5,0,.5,0);
    &.expanded {
        max-height: $maxHeight;
        transform: scaleY(1);
        transition:  transform .5s cubic-bezier(0,.5,0,.5), max-height .5s cubic-bezier(0,.5,0,.5);
    }
}

@mixin effect__list--expand-collapse--h($maxWidth) {
    max-width: 0;
    overflow: hidden;
    transition: max-width .5s cubic-bezier(.5,0,.5,0);
    &.expanded {
        max-width: $maxWidth;
        transition:  max-width .5s cubic-bezier(0,.5,0,.5);
    }
}

@mixin effect__list--expand-collapse--h--scale($maxWidth) {
    max-width: 0;
    transform: scaleX(0);
    transform-origin: 0 0;
    overflow: hidden;
    transition: transform .5s cubic-bezier(.5,0,.5,0), max-width .5s cubic-bezier(.5,0,.5,0);
    &.expanded {
        max-width: $maxWidth;
        transform: scaleX(1);
        transition:  .5s cubic-bezier(0,.5,0,.5), max-width .5s cubic-bezier(0,.5,0,.5);
    }
}

@mixin effect__list-item--vertical-expand--scale($itemHeight) {
    transform: scaleY(0);
    transition: max-height .5s, transform .5s;
    transform-origin: 0 0;
    max-height: 0;
    &.show {
        transform: scaleY(1);
        max-height: $itemHeight;
    }
}

@mixin effect__list-item--vertical-expand--height($itemHeight) {
    max-height: 0px;
    transition: max-height .5s, margin-top 0s 0s;
    &.show {
        max-height:$itemHeight;
    }
}

/*
    this effect uses the margin-top property to transition for item insert
    .show: final state for the list item.
    .insert-before: transitional state for when an item is inserting before the item
*/

@mixin effect__list-item--horizontal-expand--scale($itemHeight) {
    transform: scaleX(0);
    transition: transform .5s, margin-top 0s 0s;
    transform-origin: 0 0;
    &.show {
        transform: scaleX(1);
    }
    &.insert-before {
        margin-top: $itemHeight;
        transition: margin-top .5s;
    }
}

@mixin effect__list-item--horizontal-expand--width($itemHeight, $itemWidth) {
    max-width: 0px;
    overflow: hidden;
    transition: max-width .5s, margin-top 0s 0s;
    &.show {
        max-width:$itemWidth;
    }
    &.insert-before {
        margin-top: $itemHeight;
        transition: margin-top .5s;
    }
}

@mixin effect__list-item--vertical-expand-fade($itemHeight) {
    height: 0px;
    overflow: hidden;
    opacity: 0;
    transform: scaleY(0);
    transition: transform .3s cubic-bezier(.48,0,.17,1), height .3s cubic-bezier(.48,0,.17,1), opacity .3s cubic-bezier(.48,.01,.31,1);
    transform-origin: 50% 0;
    &.show{
        transform: scaleY(1);
        height: $itemHeight;
        opacity: 1;
        transition: transform .3s cubic-bezier(.75,.01,.64,1), height .3s cubic-bezier(.75,.01,.64,1), opacity .3s cubic-bezier(1,0,.8,1);
    }
}